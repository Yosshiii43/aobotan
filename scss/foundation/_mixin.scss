/******************************
mixin
******************************/
@use "sass:math";
@use "sass:map";

///pxからremを算出
$base-font-size: 16;

@function rem($px) {
  @return math.div($px, $base-font-size) * 1rem;
}

/// Breakpoints  (min‑width ベース = SPファースト)
$breakpoints: (
  "tab": 768px,
  "pc" : 1024px,

  "min-md": 768px,
  "min-lg": 992px,
  "min-xl": 1200px,
  "min-xxl": 1600px 
);

@mixin mq($key) {
  $min: map.get($breakpoints, $key);

  @media (min-width: $min) {
    @content;
  }
}

///pxからvwを算出
$pcDesignSize: 1440;
$tabDesignSize: 768;
$spDesignSize: 375;

//PCデザイン用
@function pc-vw($pixelsVw) {
    @return math.div($pixelsVw , $pcDesignSize) * 100vw;
}

//tabletデザイン用
@function tab-vw($pixelsVw) {
    @return math.div($pixelsVw , $tabDesignSize) * 100vw;
}

//SPデザイン用
@function sp-vw($pixelsVw) {
    @return math.div($pixelsVw , $spDesignSize) * 100vw;
}


///Min-Max-Value Interpolation
@function rclamp($min, $max, $minViewport, $maxViewport) {
  $vwScale: ($max - $min) / ($maxViewport - $minViewport);  // vw単位でのスケールを計算
  $baseOffset: $min - $minViewport * $vwScale;  // 基準となる最小値からのオフセットを計算

  $minRem: $min / 16;  // 最小値をremに変換
  $maxRem: $max / 16;  // 最大値をremに変換
  $baseOffsetRem: $baseOffset / 16;  // オフセットをremに変換
  $vwScaleRem: $vwScale * 100;  // vwスケールを調整

  @return clamp(#{$minRem}rem, #{$baseOffsetRem}rem + #{$vwScaleRem}vw, #{$maxRem}rem);
}

// 使用例
//.example {
//  font-size: rclamp(24, 64, 375, 1440);
//}